{{define "base"}}
    <!doctype html>
    <html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
        <title>Hello, world!</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.1/dist/css/datepicker-bs4.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" href="/static/css/styles.css">
    </head>
    <body>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
            </button>
        
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="/about">About</a>
                </li>
                <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Rooms
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    <a class="dropdown-item" href="/generals-quarters">General's Quarters</a>
                    <a class="dropdown-item" href="/majors-suite">Major's Suite</a>
                </div>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="/search-availability" tabindex="-1" aria-disabled="true">Book Now</a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="/contact" tabindex="-1" aria-disabled="true">Contact</a>
                </li>
            </ul>
            </div>
        </nav>
        {{block "content" .}}
            
        {{end}}

        <div class="row my-footer">
            <div class="col">
                Left
            </div>
            <div class="col">
                Middle
            </div>
            <div class="col">
                Right
            </div>
        </div>
        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.1/dist/js/datepicker-full.min.js"></script>
        <script src="https://unpkg.com/notie"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

        {{block "js" .}}
            
        {{end}}
        <script>
        let attention = Prompt();

        function notify(msg, msgType) {
            notie.alert({
            type: msgType,
            text: msg,
            })
        }

        function notifyModal(title, text, icon, confirmationButtonText) {
            Swal.fire({
            title: title,
            html: text,
            icon: icon,
            confirmButtonText: confirmationButtonText,
            })
        }

        function Prompt() {
            let toast = function(c) {
            const {
                msg = "",
                icon = "success",
                position = "top-end",
            } = c;
            const Toast = Swal.mixin({
                toast: true,
                title: msg,
                position: position,
                icon: icon,
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            Toast.fire({})
            }

            let success = function(c) {
            const {
                msg = "",
                title = "",
                footer = "",
            } = c;
            Swal.fire({
                icon: 'success',
                title: title,
                text: msg,
                footer: footer,
            })
            }

            let error = function(c) {
            const {
                msg = "",
                title = "",
                footer = "",
            } = c;
            Swal.fire({
                icon: 'error',
                title: title,
                text: msg,
                footer: footer,
            })
            }

            async function custom(c) {
            const {
                msg = "",
                title = "",
            } = c;

            const { value: result } = await Swal.fire({
                title: title,
                html: msg,
                backdrop: false,
                focusConfirm: false,
                showCancelButton: true,
                willOpen: () => {
                    if (c.willOpen !== undefined) {
                        c.willOpen();
                    }
                },
                preConfirm: () => {
                return [
                    document.getElementById('start').value,
                    document.getElementById('end').value
                ]
                },
                didOpen: () => {
                    if (c.didOpen !== undefined) {
                        c.didOpen();
                    }
                },
            })
            if (result) {
                if (result.dismiss !== Swal.DismissReason.cancel) {
                    if (result.value !== "") {
                        if (c.callback !== undefined) {
                            c.callback(result);
                        }
                    } else {
                        c.callback(false);
                    }
                } else {
                    c.callback(false);
                }
            }

            }

            return {
            toast: toast,
            success: success,
            error: error,
            custom: custom,
            }
        }
        
        </script>
    </body>
    </html>
{{end}}